import { Request, Response, NextFunction } from 'express'
import Enterprise from '@/app/models/Enterprise.model'
import { randomBytes, UUID } from 'node:crypto'
import fs from 'fs'
import User from '@/app/models/User.model'

export class AdminUsersController {
    async getUsers (req: Request, res: Response, next: NextFunction): Promise<void> {
        const users = await User.getAll()
        res.json(users)
    }

    async createUser (req: Request, res: Response, next: NextFunction): Promise<void> {
        const { username, email, enterprise_id } = req.body
        const enterprise = await Enterprise.findById(enterprise_id as UUID)
        if (!enterprise) {
            res.status(404).json({
                message: 'Enterprise not found.'
            })
            return
        }

        const existingUser = await User.findByEmail(email)

        if (existingUser) {
            res.status(400).json({
                message: 'User already exists.'
            })
            return
        }

        // Min 8 characters, max 16 characters
        const autogeneratedPassword = randomBytes(4).toString('hex')
        console.log('autogeneratedPassword', autogeneratedPassword)

        const user = new User({
            id: User.generateId(),
            username,
            password: autogeneratedPassword,
            email,
            enterprise
        })
        try {
            await user.create()
            res.json(user)
        } catch (error) {
            if (error) {
                res.status(400).json({
                    message: (error as Error).message,
                    error_type: (error as Error).name
                })
            }
        }
    }
}